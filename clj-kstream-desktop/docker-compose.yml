version: '2'
services:
  consul:
    image: qnib/alpn-consul
    hostname: consul
    container_name: consul
    networks:
     - network
    environment:
     - DC_NAME=es
     - RUN_SERVER=true
     - BOOTSTRAP_CONSUL=true
     - DNS_RECURSOR=8.8.8.8
    ports:
    - "8500:8500"

  zookeeper:
    image: qnib/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    extends:
      file: base.yml
      service: sojoner
    ports:
    - "2181:2181"

  kafka-broker:
    image: qnib/kafka:0.10.0.1
    hostname: kafka-broker
    container_name: kafka-broker
    extends:
      file: base.yml
      service: sojoner
    volumes:
     - /tmp/kafka-logs     
    ports:
     - "9092:9092"
  # Look at kafka for basic checking
  kafka-manager:
    image: qnib/kafka-manager
    hostname: kafka-manager
    container_name: kafka-manager
    extends:
      file: base.yml
      service: sojoner
    environment:
    - APPLICATION_SECRET=letmein
    ports:
    - "9000:9000"
  
  # Our Data sink
  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    container_name: elasticsearch1
    environment:
      - xpack.security.enabled=false
      - cluster.name=clj-kstream-es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - network

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    container_name: elasticsearch2
    environment:
      - xpack.security.enabled=false
      - cluster.name=clj-kstream-es-docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.zen.ping.unicast.hosts=elasticsearch1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 1g
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - network

  kibana:
    image: docker.elastic.co/kibana/kibana:5.3.0
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elasticsearch1:9200
    ports:
      - 5601:5601
    networks:
      - network

  # Our small tools
  clj-kstream-cutter:
    image: sojoner/clj-kstream-cutter:0.2.0
    hostname: clj-kstream-cutter
    container_name: clj-kstream-cutter
    extends:
      file: base.yml
      service: sojoner
    command: "--broker kafka-broker:9092 --zookeeper zookeeper:2181 --input-topic logs-replay --output-topic mapped-test-json --selector msg --name stream-cut-json-field"  

  clj-kstream-hh:
    image: sojoner/clj-kstream-hh:0.1.0
    hostname: clj-kstream-hh
    container_name: clj-kstream-hh
    extends:
      file: base.yml
      service: sojoner
    command: "--broker kafka-broker:9092 --input-topic mapped-test-json --output-topic heavy-hitters  --window-size 1 --name stream-hh"  

  clj-kstream-string-long-window-aggregate:
    image: sojoner/clj-kstream-string-long-window-aggregate:0.2.2
    hostname: clj-kstream-string-long-window-aggregate
    container_name: clj-kstream-string-long-window-aggregate
    extends:
      file: base.yml
      service: sojoner
    command: "--broker kafka-broker:9092 --input-topic heavy-hitters --window-size 1 --output-topic agg-result --name stream-agg"

  clj-kstream-elasticsearch-sink:
    image: sojoner/clj-kstream-elasticsearch-sink:0.0.1
    hostname: clj-elasticsearch-sink
    container_name: clj-elasticsearch-sink
    extends:
      file: base.yml
      service: sojoner
    command: "--broker kafka-broker:9092 --topic agg-result --elasticsearch http://elasticsearch1:9200 --index heavy-hitters-test-idx --index-type hh-struct"

  # For ever publishing text messages kafka producer for testing
  clj-kstream-lf-producer:
    image: sojoner/clj-kstream-lf-producer:0.1.0
    hostname: clj-kstream-lf-producer
    container_name: clj-kstream-lf-producer
    extends:
      file: base.yml
      service: sojoner
    command: "--broker kafka-broker:9092 --topic logs-replay"

# Have Bind Mounts on the docker engine
volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local

# a network for our stack
networks:
  network:
    driver: bridge
